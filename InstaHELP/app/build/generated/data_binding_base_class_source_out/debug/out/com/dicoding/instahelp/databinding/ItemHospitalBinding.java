// Generated by view binder compiler. Do not edit!
package com.dicoding.instahelp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.dicoding.instahelp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemHospitalBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView availabilityBadge;

  @NonNull
  public final LinearLayout callButton;

  @NonNull
  public final ImageView callIcon;

  @NonNull
  public final TextView callText;

  @NonNull
  public final TextView distance;

  @NonNull
  public final ImageView hospitalImage;

  @NonNull
  public final TextView hospitalLocation;

  @NonNull
  public final TextView hospitalName;

  @NonNull
  public final ImageView locationIcon;

  @NonNull
  public final TextView vehicleCount;

  @NonNull
  public final ImageView vehicleIcon;

  private ItemHospitalBinding(@NonNull CardView rootView, @NonNull TextView availabilityBadge,
      @NonNull LinearLayout callButton, @NonNull ImageView callIcon, @NonNull TextView callText,
      @NonNull TextView distance, @NonNull ImageView hospitalImage,
      @NonNull TextView hospitalLocation, @NonNull TextView hospitalName,
      @NonNull ImageView locationIcon, @NonNull TextView vehicleCount,
      @NonNull ImageView vehicleIcon) {
    this.rootView = rootView;
    this.availabilityBadge = availabilityBadge;
    this.callButton = callButton;
    this.callIcon = callIcon;
    this.callText = callText;
    this.distance = distance;
    this.hospitalImage = hospitalImage;
    this.hospitalLocation = hospitalLocation;
    this.hospitalName = hospitalName;
    this.locationIcon = locationIcon;
    this.vehicleCount = vehicleCount;
    this.vehicleIcon = vehicleIcon;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemHospitalBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemHospitalBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_hospital, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemHospitalBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.availability_badge;
      TextView availabilityBadge = ViewBindings.findChildViewById(rootView, id);
      if (availabilityBadge == null) {
        break missingId;
      }

      id = R.id.call_button;
      LinearLayout callButton = ViewBindings.findChildViewById(rootView, id);
      if (callButton == null) {
        break missingId;
      }

      id = R.id.call_icon;
      ImageView callIcon = ViewBindings.findChildViewById(rootView, id);
      if (callIcon == null) {
        break missingId;
      }

      id = R.id.call_text;
      TextView callText = ViewBindings.findChildViewById(rootView, id);
      if (callText == null) {
        break missingId;
      }

      id = R.id.distance;
      TextView distance = ViewBindings.findChildViewById(rootView, id);
      if (distance == null) {
        break missingId;
      }

      id = R.id.hospital_image;
      ImageView hospitalImage = ViewBindings.findChildViewById(rootView, id);
      if (hospitalImage == null) {
        break missingId;
      }

      id = R.id.hospital_location;
      TextView hospitalLocation = ViewBindings.findChildViewById(rootView, id);
      if (hospitalLocation == null) {
        break missingId;
      }

      id = R.id.hospital_name;
      TextView hospitalName = ViewBindings.findChildViewById(rootView, id);
      if (hospitalName == null) {
        break missingId;
      }

      id = R.id.location_icon;
      ImageView locationIcon = ViewBindings.findChildViewById(rootView, id);
      if (locationIcon == null) {
        break missingId;
      }

      id = R.id.vehicle_count;
      TextView vehicleCount = ViewBindings.findChildViewById(rootView, id);
      if (vehicleCount == null) {
        break missingId;
      }

      id = R.id.vehicle_icon;
      ImageView vehicleIcon = ViewBindings.findChildViewById(rootView, id);
      if (vehicleIcon == null) {
        break missingId;
      }

      return new ItemHospitalBinding((CardView) rootView, availabilityBadge, callButton, callIcon,
          callText, distance, hospitalImage, hospitalLocation, hospitalName, locationIcon,
          vehicleCount, vehicleIcon);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
