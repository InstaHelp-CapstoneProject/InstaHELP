// Generated by view binder compiler. Do not edit!
package com.dicoding.instahelp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.dicoding.instahelp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ToolbarappBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView city;

  @NonNull
  public final TextView name;

  @NonNull
  public final ImageView profileImage;

  @NonNull
  public final RelativeLayout relativeLayout2;

  @NonNull
  public final ImageView toolbarapp;

  @NonNull
  public final TextView verified;

  private ToolbarappBinding(@NonNull ConstraintLayout rootView, @NonNull TextView city,
      @NonNull TextView name, @NonNull ImageView profileImage,
      @NonNull RelativeLayout relativeLayout2, @NonNull ImageView toolbarapp,
      @NonNull TextView verified) {
    this.rootView = rootView;
    this.city = city;
    this.name = name;
    this.profileImage = profileImage;
    this.relativeLayout2 = relativeLayout2;
    this.toolbarapp = toolbarapp;
    this.verified = verified;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ToolbarappBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ToolbarappBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.toolbarapp, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ToolbarappBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.city;
      TextView city = ViewBindings.findChildViewById(rootView, id);
      if (city == null) {
        break missingId;
      }

      id = R.id.name;
      TextView name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.profile_image;
      ImageView profileImage = ViewBindings.findChildViewById(rootView, id);
      if (profileImage == null) {
        break missingId;
      }

      id = R.id.relativeLayout2;
      RelativeLayout relativeLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (relativeLayout2 == null) {
        break missingId;
      }

      id = R.id.toolbarapp;
      ImageView toolbarapp = ViewBindings.findChildViewById(rootView, id);
      if (toolbarapp == null) {
        break missingId;
      }

      id = R.id.verified;
      TextView verified = ViewBindings.findChildViewById(rootView, id);
      if (verified == null) {
        break missingId;
      }

      return new ToolbarappBinding((ConstraintLayout) rootView, city, name, profileImage,
          relativeLayout2, toolbarapp, verified);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
