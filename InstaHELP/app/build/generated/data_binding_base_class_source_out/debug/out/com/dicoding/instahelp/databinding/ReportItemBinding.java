// Generated by view binder compiler. Do not edit!
package com.dicoding.instahelp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.dicoding.instahelp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ReportItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button detailButton;

  @NonNull
  public final TextView reportDescription;

  @NonNull
  public final ImageView reportImage;

  @NonNull
  public final TextView reportTime;

  @NonNull
  public final TextView reportTitle;

  private ReportItemBinding(@NonNull LinearLayout rootView, @NonNull Button detailButton,
      @NonNull TextView reportDescription, @NonNull ImageView reportImage,
      @NonNull TextView reportTime, @NonNull TextView reportTitle) {
    this.rootView = rootView;
    this.detailButton = detailButton;
    this.reportDescription = reportDescription;
    this.reportImage = reportImage;
    this.reportTime = reportTime;
    this.reportTitle = reportTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ReportItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ReportItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.report_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ReportItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.detailButton;
      Button detailButton = ViewBindings.findChildViewById(rootView, id);
      if (detailButton == null) {
        break missingId;
      }

      id = R.id.reportDescription;
      TextView reportDescription = ViewBindings.findChildViewById(rootView, id);
      if (reportDescription == null) {
        break missingId;
      }

      id = R.id.reportImage;
      ImageView reportImage = ViewBindings.findChildViewById(rootView, id);
      if (reportImage == null) {
        break missingId;
      }

      id = R.id.reportTime;
      TextView reportTime = ViewBindings.findChildViewById(rootView, id);
      if (reportTime == null) {
        break missingId;
      }

      id = R.id.reportTitle;
      TextView reportTitle = ViewBindings.findChildViewById(rootView, id);
      if (reportTitle == null) {
        break missingId;
      }

      return new ReportItemBinding((LinearLayout) rootView, detailButton, reportDescription,
          reportImage, reportTime, reportTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
