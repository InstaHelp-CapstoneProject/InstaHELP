// Generated by view binder compiler. Do not edit!
package com.dicoding.instahelp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.dicoding.instahelp.R;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ToolbarBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final BottomNavigationView bottomNavigationView;

  @NonNull
  public final ImageView btnBack;

  @NonNull
<<<<<<< HEAD
  public final RecyclerView reportRecyclerView;

  @NonNull
  public final TextView rincian;
=======
  public final TextView detail;
>>>>>>> 2d4ec518d211e71ad833176765cc50b1eb2c192f

  @NonNull
  public final TextInputEditText searchEditText;

  @NonNull
  public final LinearLayout toolbar;

<<<<<<< HEAD
  private ToolbarBinding(@NonNull CoordinatorLayout rootView,
      @NonNull BottomNavigationView bottomNavigationView, @NonNull ImageView btnBack,
      @NonNull RecyclerView reportRecyclerView, @NonNull TextView rincian,
      @NonNull TextInputEditText searchEditText, @NonNull LinearLayout toolbar) {
=======
  private ToolbarBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView btnBack,
      @NonNull TextView detail, @NonNull LinearLayout toolbar) {
>>>>>>> 2d4ec518d211e71ad833176765cc50b1eb2c192f
    this.rootView = rootView;
    this.bottomNavigationView = bottomNavigationView;
    this.btnBack = btnBack;
<<<<<<< HEAD
    this.reportRecyclerView = reportRecyclerView;
    this.rincian = rincian;
    this.searchEditText = searchEditText;
=======
    this.detail = detail;
>>>>>>> 2d4ec518d211e71ad833176765cc50b1eb2c192f
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ToolbarBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ToolbarBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.toolbar, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ToolbarBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottomNavigationView;
      BottomNavigationView bottomNavigationView = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavigationView == null) {
        break missingId;
      }

      id = R.id.btn_back;
      ImageView btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

<<<<<<< HEAD
      id = R.id.reportRecyclerView;
      RecyclerView reportRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (reportRecyclerView == null) {
        break missingId;
      }

      id = R.id.rincian;
      TextView rincian = ViewBindings.findChildViewById(rootView, id);
      if (rincian == null) {
=======
      id = R.id.detail;
      TextView detail = ViewBindings.findChildViewById(rootView, id);
      if (detail == null) {
>>>>>>> 2d4ec518d211e71ad833176765cc50b1eb2c192f
        break missingId;
      }

      id = R.id.searchEditText;
      TextInputEditText searchEditText = ViewBindings.findChildViewById(rootView, id);
      if (searchEditText == null) {
        break missingId;
      }

      id = R.id.toolbar;
      LinearLayout toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

<<<<<<< HEAD
      return new ToolbarBinding((CoordinatorLayout) rootView, bottomNavigationView, btnBack,
          reportRecyclerView, rincian, searchEditText, toolbar);
=======
      return new ToolbarBinding((ConstraintLayout) rootView, btnBack, detail, toolbar);
>>>>>>> 2d4ec518d211e71ad833176765cc50b1eb2c192f
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
