// Generated by view binder compiler. Do not edit!
package com.dicoding.instahelp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.dicoding.instahelp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutBottomSheetCallBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout buttonCall;

  @NonNull
  public final EditText editTextCoordinates;

  @NonNull
  public final TextView headerText;

  @NonNull
  public final RelativeLayout locationButton;

  @NonNull
  public final ImageView micButton;

  @NonNull
  public final TextView textTitikKoordinat;

  private LayoutBottomSheetCallBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout buttonCall, @NonNull EditText editTextCoordinates,
      @NonNull TextView headerText, @NonNull RelativeLayout locationButton,
      @NonNull ImageView micButton, @NonNull TextView textTitikKoordinat) {
    this.rootView = rootView;
    this.buttonCall = buttonCall;
    this.editTextCoordinates = editTextCoordinates;
    this.headerText = headerText;
    this.locationButton = locationButton;
    this.micButton = micButton;
    this.textTitikKoordinat = textTitikKoordinat;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutBottomSheetCallBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutBottomSheetCallBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_bottom_sheet_call, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutBottomSheetCallBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_call;
      LinearLayout buttonCall = ViewBindings.findChildViewById(rootView, id);
      if (buttonCall == null) {
        break missingId;
      }

      id = R.id.edit_text_coordinates;
      EditText editTextCoordinates = ViewBindings.findChildViewById(rootView, id);
      if (editTextCoordinates == null) {
        break missingId;
      }

      id = R.id.header_text;
      TextView headerText = ViewBindings.findChildViewById(rootView, id);
      if (headerText == null) {
        break missingId;
      }

      id = R.id.location_button;
      RelativeLayout locationButton = ViewBindings.findChildViewById(rootView, id);
      if (locationButton == null) {
        break missingId;
      }

      id = R.id.mic_button;
      ImageView micButton = ViewBindings.findChildViewById(rootView, id);
      if (micButton == null) {
        break missingId;
      }

      id = R.id.text_titik_koordinat;
      TextView textTitikKoordinat = ViewBindings.findChildViewById(rootView, id);
      if (textTitikKoordinat == null) {
        break missingId;
      }

      return new LayoutBottomSheetCallBinding((LinearLayout) rootView, buttonCall,
          editTextCoordinates, headerText, locationButton, micButton, textTitikKoordinat);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
